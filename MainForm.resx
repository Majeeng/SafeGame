<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>